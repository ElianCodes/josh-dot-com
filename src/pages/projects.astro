---
import { CollectionEntry, getCollection } from "astro:content";

import Hero from "../components/Hero.astro";
import { ProjectEntryList } from "../components/ProjectEntryList";
import { Text } from "../components/Text";
import BaseLayout from "../layouts/BaseLayout.astro";
import { groupBy } from "../utils";

const allProjects = await getCollection("projects");

function byMoreOrStars(
	a: CollectionEntry<"projects">,
	b: CollectionEntry<"projects">
) {
	if (a.data.more && !b.data.more) {
		return 1;
	}

	if (b.data.more && !a.data.more) {
		return -1;
	}

	return b.data.stars - a.data.stars;
}
---

<BaseLayout title="Projects">
	<Hero class="hero" image="/images/me-thumbs-up.png">
		<Text as="h1" class="wavy" fontSize="title-secondary" fontWeight="bolder">
			Projects
		</Text>
		<Text as="p" class="subtitle" fontSize="medium" fontWeight="light">
			I primarily work on static analysis tooling for TypeScript -- projects
			that scrutinize your code without running it.
		</Text>
		<Text as="p" class="subtitle" fontSize="medium" fontWeight="light">
			I also maintain smaller projects that assist with web development tooling
			or adding emoji delighters to sites.
		</Text>
	</Hero>

	{
		Object.entries(groupBy(allProjects, (project) => project.data.category))
			.sort(([a], [b]) => a.localeCompare(b))
			.map(([category, projects]) => (
				<ProjectEntryList
					category={category}
					class="projectEntryList"
					projects={projects.sort(byMoreOrStars)}
				/>
			))
	}
</BaseLayout>

<style>
	.wavy {
		text-decoration: var(--textDecorationWavy) var(--colorEmphasized);
	}

	.subtitle {
		margin-top: 2rem;
		max-width: 24rem;
	}

	.projectEntryList {
		margin: 6rem 0;
	}
</style>
