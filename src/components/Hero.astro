---
import { Text } from './Text';
export interface ColorSchemeImages {
	dark: string;
	light: string;
}

interface Props {
	class?: string | undefined;
	image: string | ColorSchemeImages;
	primary: string;
}

const { class: className, image, primary } = Astro.props;
const images =
	typeof image === "string" ? { dark: image, light: image } : image;
---

<div class:list={["hero", className]}>
	<div class="half first">
		<picture>
			<source srcset={images.dark} media="(prefers-color-scheme: dark)" />
			<source srcset={images.light} media="(prefers-color-scheme: light)" />
			<img alt="" src={images.light} />
		</picture>
	</div>
	<div class="half second">
		<Text
			as="h1"
			fontSize="title"
			fontWeight="bolder"
		>
			{primary}
		</Text>
		<slot />
	</div>
</div>

<style>
	.hero {
		align-items: center;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		margin: 1rem auto 4rem;
		padding: 0 1rem;
		position: relative;
		width: var(--widthFull);
		max-width: 100%;
		text-align: center;

		--imageSize: 10rem;
	}

	h1 {
		color: var(--colorForegroundExtra);
		line-height: 0.75;
		text-shadow: var(--textShadow);
	}

	img {
		width: var(--imageSize);
	}

	@media (min-width: 700px) {
		.hero {
			gap: 2.5rem;
			height: 35vh;
			min-height: calc(var(--imageSize) + 1rem);
			max-height: 20rem;
			flex-direction: row;
			margin: clamp(1rem, 5vh, 7rem) 0 clamp(2rem, 7vh, 10rem);
			padding: 0;
			text-align: left;
		}

		.half {
			position: relative;
		}

		.half.first {
			display: flex;
			justify-content: flex-end;
			max-height: initial;
			width: 45%;
		}

		.half.second {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: center;
			width: 55%;
		}

		picture {
			transform: none;
		}

		img {
			border-radius: 100%;
			height: 256px;
			max-height: 100%;
			max-width: 100%;
			width: 256px;
			box-shadow: 0 7px 7px 3px var(--colorSubtle);
		}
	}
</style>
